@model StudentManage.Models.UnionFormModel
@{
    ViewBag.Title = "EvaluationForm";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
    //var listMain = (List<StudentManage.Models.EvaluativeMainModel>)ViewBag.listMain;
    //var listCriteria = (List<StudentManage.Models.EvaluativeCriteriaModel>)ViewBag.listCriteria;
    var user = (StudentManage.Models.UserModel)ViewBag.user;
}
<!-- Page Content -->
<div class="content container-fluid">
    <!-- Page Header -->
    <div class="page-header">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h3 class="page-title">Chấm điểm</h3>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item"><a href="index.html" style="color:#6c757d;">Trang chủ</a></li>
                    <li class="breadcrumb-item">Đánh giá đoàn viên</li>
                    <li class="breadcrumb-item active"><a href="#">Chấm điểm cá nhân</a></li>
                </ul>
            </div>
        </div>
    </div>
    <!-- /Page Header -->
    <!-- Student info -->
    <div class="card">
        <div class="card-header">
            <h4 class="card-title mb-0">Thông tin sinh viên</h4>
        </div>
        <div class="card-body">
            <div class="profile-view">
                <div class="profile-img-wrap">
                    <div class="profile-img">
                        <a href="#"><img alt="" src="~/Assets/img/profiles/user.jpg"></a>
                    </div>
                </div>
                <div class="profile-basic">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="profile-info-left">
                                <h3 class="user-name m-t-0 mb-0">@user.fullname</h3>
                                <div class="staff-id">Mã số sinh viên : @user.studentCode</div>
                                <div class="small text-muted">
                                    Khoa: @user.facultyName
                                </div>
                                <div class="small text-muted">Lớp: @user.className</div>
                                @{
                                    int studenCode;
                                    bool isNumber = int.TryParse(user.studentCode, out studenCode);
                                    if (isNumber)
                                    {
                                        int year = int.Parse(user.studentCode.Substring(0, 2)) + 2000;
                                        <div class="small text-muted">Khóa : @year - @(year + 4)</div>
                                    }
                                }

                            </div>
                        </div>
                        <div class="col-md-7">
                            <ul class="personal-info">
                                <li>
                                    <div class="title">Số điện thoại:</div>
                                    <div class="text"><span>@user.phone</span></div>
                                </li>
                                <li>
                                    <div class="title">Email:</div>
                                    <div class="text">
                                        <span>@user.email</span>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /Student info -->
    <!-- Jugedment table -->
    <div class="card m-b-30">
        <div class="card-header">
            <h4 class="card-title mb-0">Đánh giá rèn luyện</h4>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    <form action="~/UnionEvaluation/Evaluation" method="post">
                        <div class="table-responsive" style="white-space:unset">
                            <table class="table table-bordered table-hover mb-0 juged-table">
                                <thead>
                                    <tr class="text-center">
                                        <th rowspan="2">
                                            <span style="font-size: 20px;">
                                                STT
                                            </span>
                                        </th>
                                        <th rowspan="2">
                                            <span style="font-size: 26px;">
                                                Nội dung
                                            </span>
                                        </th>
                                        <th colspan="4">Điểm</th>
                                    </tr>
                                    <tr class="text-center">
                                        <th style="width:120px; min-width:100px">ĐV</th>
                                        <th style="width:120px; min-width:100px">Lớp</th>
                                        <th style="width:120px; min-width:100px">Khoa</th>
                                        <th style="width:120px; min-width:100px">Trường</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int count = 1;
                                        int turn = (Model.Turn == null) ? 0 : (int)Model.Turn;
                                    }
                                    @foreach (var item in Model.ListMain)
                                    {
                                        <tr>
                                            <td colspan="6">
                                                <b style="font-size: 18px;">
                                                    @item.content
                                                </b>
                                            </td>
                                        </tr>
                                        foreach (var criteria in Model.ListCriteria)
                                        {
                                            if (criteria.mainId == item.mainId)
                                            {
                                                <tr>
                                                    <td class="text-center">@count</td>
                                                    @{count++; }
                                                    <td>
                                                        @criteria.criteriaContent
                                                        <b>(0–@criteria.score điểm).</b>
                                                    </td>
                                                    <!-- #region Level 1 - Đoàn Viên -->
                                                    <td class="text-center">
                                                        @if (Model.IsInTime == 1)
                                                        {
                                                            // Input Score
                                                            <input type="number" name="@("listmodel[" + (count - 2) + "].score")" value="@criteria.score1" class="juged-input" required min="0" max="@criteria.score"
                                                                   oninvalid="onInvalid(this, @criteria.score)"
                                                                   oninput="onInput(this)" />
                                                            // Criteria Id
                                                            <input type="hidden" name="@("listmodel[" + (count - 2) + "].criteriaId")" value="@criteria.criteriaId" />
                                                        }
                                                        else
                                                        {
                                                            @((criteria.score1 == null) ? Html.Raw("-") : Html.Raw(criteria.score1));
                                                        }
                                                    </td>
                                                    <!-- #endregion -->
                                                    <!-- #region Level 2 - Bí thư chi đoàn -->
                                                    <td class="text-center">
                                                        @if (Model.IsInTime == 2)
                                                        {
                                                            // Input Score
                                                            <input type="number" name="@("listmodel[" + (count - 2) + "].score")" value="@criteria.score2" class="juged-input" required min="0" max="@criteria.score"
                                                                   oninvalid="onInvalid(this, @criteria.score)"
                                                                   oninput="onInput(this)" />
                                                            // Criteria Id
                                                            <input type="hidden" name="@("listmodel[" + (count - 2) + "].criteriaId")" value="@criteria.criteriaId" />
                                                        }
                                                        else
                                                        {
                                                            @((criteria.score2 == null) ? Html.Raw("-") : Html.Raw(criteria.score2));
                                                        }
                                                    </td>
                                                    <!-- #endregion -->
                                                    <!-- #region Level 3 - Bí thư Đoàn khoa -->
                                                    <td class="text-center">
                                                        @if (Model.IsInTime == 3)
                                                        {
                                                            // Input Score
                                                            <input type="number" name="@("listmodel[" + (count - 2) + "].score")" value="@criteria.score3" class="juged-input" required min="0" max="@criteria.score"
                                                                   oninvalid="onInvalid(this, @criteria.score)"
                                                                   oninput="onInput(this)" />
                                                            // Criteria Id
                                                            <input type="hidden" name="@("listmodel[" + (count - 2) + "].criteriaId")" value="@criteria.criteriaId" />
                                                        }
                                                        else
                                                        {
                                                            @((criteria.score3 == null) ? Html.Raw("-") : Html.Raw(criteria.score3));
                                                        }
                                                    </td>
                                                    <!-- #endregion -->
                                                    <!-- #region Level 4 - Bí thư Đoàn trường -->
                                                    <td class="text-center">
                                                        @if (Model.IsInTime == 4)
                                                        {
                                                            // Input Score
                                                            <input type="number" name="@("listmodel[" + (count - 2) + "].score")" value="@criteria.score4" class="juged-input" required min="0" max="@criteria.score"
                                                                   oninvalid="onInvalid(this, @criteria.score)"
                                                                   oninput="onInput(this)" />
                                                            // Criteria Id
                                                            <input type="hidden" name="@("listmodel[" + (count - 2) + "].criteriaId")" value="@criteria.criteriaId" />
                                                        }
                                                        else
                                                        {
                                                            @((criteria.score2 == null) ? Html.Raw("-") : Html.Raw(criteria.score4));
                                                        }
                                                    </td>
                                                    <!-- #endregion -->
                                                </tr>
                                            }
                                        }
                                    }
                                    <!-- sum -->
                                    <tr style="background-color:#eee ;">
                                        <td colspan="2" class="text-center"> <b>Tổng điểm</b> </td>
                                        @for (int i = 0; i < Model.Total.Length; i++)
                                        {
                                            <td class="text-center font-weight-bold">@Model.Total[i]</td>
                                        }
                                    </tr>
                                    <!-- /sum -->
                                </tbody>
                            </table>
                        </div>
                        <!--Form Id Hidden Field-->
                        <input type="hidden" name="evaluationFormId" value="@Model.formId" />
                        <!--Button Form-->
                        @if (Model.IsInTime != 0)
                        {
                            <div class="d-flex justify-content-end">
                                <div class="btn btn-danger" data-toggle="modal" data-target="#delete_waring">
                                    Xóa tất cả
                                </div>
                                <button type="submit" class="btn btn-primary ml-2">Nộp</button>
                            </div>
                        }
                        <!--/Button Form-->
                    </form>
                    <!-- when done jugedment -->
                    <!-- <div class="d-flex justify-content-center">
                        <p class="text-xl d-inline-flex align-items-center">Bạn đã chấm điểm rèn luyện<i
                                class="las la-thumbs-up font-35 text-info"></i></p>
                    </div> -->

                </div>
            </div>
        </div>
    </div>
    <!-- /Jugedment table -->
</div>
<!-- Add evident Modal -->
<div id="evident_modal" class="modal custom-modal fade" data-backdrop="static" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm ảnh minh chứng</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="upload-pic_container">
                    <div class="upload-pic_wrapper">
                        <div class="upload-pic_image">
                            <img src="" alt="">
                        </div>
                        <div class="upload-pic_content">
                            <div class="upload-pic_icon">
                                <i class="fa fa-file-image-o"></i>
                            </div>
                            <div class="upload-pic_text">
                                Chưa có ảnh
                            </div>
                        </div>
                        <div id="upload-pic_cancel-btn">
                            <i class="las la-times-circle"></i>
                        </div>
                        <div class="upload-pic_file-name"></div>
                    </div>
                    <button onclick="defaultBtnActive()" id="upload-pic_custom-btn" type="button"
                            class="btn btn-outline-primary">
                        Thêm ảnh
                    </button>
                    <input id="upload-pic_default-btn" type="file" hidden>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /Add evident Modal -->
<!-- Delete Union notebook Modal -->
<div class="modal custom-modal fade" id="delete_waring" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <div class="form-header">
                    <h3>Xóa tất cả điểm bạn đã nhập</h3>
                    <p>Bạn có chắc chắn muốn xóa?</p>
                </div>
                <div class="modal-btn delete-action">
                    <div class="row">
                        <div class="col-6">
                            <a href="#" onclick="deleteAllInput()" class="btn continue-btn">Xóa</a>
                        </div>
                        <div class="col-6">
                            <a href="javascript:void(0);" data-dismiss="modal"
                               class="btn cancel-btn">Hủy</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Delete Union notebook Modal -->
@section js
{
    <!--Import Image-->
    <script src="~/Assets/js/input-img.js"></script>
    @if (TempData["ERROR"] != null)
    {
        var list = TempData["listError"] as List<StudentManage.Models.EvaluationModel>;
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                toastr.error("@TempData["ERROR"]", "Lỗi");
                sound("/Assets/mp3/smallbox.mp3");
                @foreach(var item in list)
                {
                    // Clear Error Input
                    @: $('input[name="listmodel[@(item.criteriaId-1)].score"]').val("");
                    // Change Input Border Color - Red
                    @: $('input[name="listmodel[@(item.criteriaId-1)].score"]')[0].style.border = "1px solid #eb4034";
                }
                $("html, body").animate({
                    scrollTop: $('input[name="listmodel[@(list[0].criteriaId-1)].score').offset().top - $(window).height()/2
                },4000)
            })
        </script>
    }
    <script>
        // Clear All Input
        function deleteAllInput() {
            $(".juged-input").val('');
            $("#delete_waring").modal('hide');
        }
        // Input Score Validation
        function onInvalid(input, max) {
            input.setCustomValidity('Điểm phải trong khoảng từ 0 đến ' + max);
            input.style.border = "2px solid #eb4034";
        }
        // Oninput Score
        function onInput(input) {
            input.style.border = "1px solid gray";
            input.setCustomValidity("");
    }
    </script>
}

